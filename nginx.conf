
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    server {
        listen 8090;
        server_name localhost;

        # 设置网站根目录为 CounselingCloudBridge-Web
        root "D:/Learning/CounselingCloudBridge-Web";
        index templates/index.html;

        location / {
            try_files $uri $uri/ /templates/index.html;
        }

        # 管理员路径 /admin/base → 指向 /admin 目录下的 base.html
        location /admin/base {
            root "D:/Learning/CounselingCloudBridge-Web";
            try_files $uri $uri/ /templates/administrator/base.html;
        }

        location /admin/history {
           root "D:/Learning/CounselingCloudBridge-Web";
            try_files $uri $uri/ /templates/administrator/history.html;
        }

        location /admin/schedule {
           root "D:/Learning/CounselingCloudBridge-Web";
            try_files $uri $uri/ /templates/administrator/schedule.html;
        }

        location /admin/counselorManagement {
            root "D:/Learning/CounselingCloudBridge-Web";
            try_files $uri $uri/ /templates/administrator/counselorManagement.html;
        }

        location /admin/supervisorManagement {
            root "D:/Learning/CounselingCloudBridge-Web";
            try_files $uri $uri/ /templates/administrator/supervisorManagement.html;
        }


        # 督导路径 /supervisor/base → 指向 /admin 目录下的 base.html
        location /supervisor/base {
            root "D:/Learning/CounselingCloudBridge-Web/templates";
            try_files $uri $uri/ /supervisor/base.html;
        }

        location /supervisor/schedule {
            root "D:/Learning/CounselingCloudBridge-Web/templates";
            try_files $uri $uri/ /supervisor/schedule.html;
        }

        location /supervisor/history {
            root "D:/Learning/CounselingCloudBridge-Web/templates";
            try_files $uri $uri/ /supervisor/history.html;
        }

        # 咨询师路径 /admin/base → 指向 /counselor 目录下的 base.html
        location /counselor/base {
            root "D:/Learning/CounselingCloudBridge-Web/templates";
            try_files $uri $uri/ /counselor/base.html;
        }

        location /counselor/history {
            root "D:/Learning/CounselingCloudBridge-Web/templates";
            try_files $uri $uri/ /counselor/history.html;
        }

        location ~ ^/counselor/chat/(\d+)$ {
            root "D:/Learning/CounselingCloudBridge-Web/templates";
            try_files /counselor/counsel.html =404;
        }

        # 代理 API 请求到 Spring Boot 后端
        location /api/ {

            proxy_pass http://localhost:8080;  # 这里去掉了尾部的斜杠
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 允许跨域请求
            add_header Access-Control-Allow-Origin *;
            # 允许带身份验证信息的跨域请求
            add_header Access-Control-Allow-Credentials true;
            # 允许的请求方法
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            # 允许的请求头
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            # 预检请求的有效期
            add_header Access-Control-Max-Age 3600;
            # 处理 OPTIONS 请求
            if ($request_method = 'OPTIONS') {
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }


        }
    }




    # server {
    #     listen       80;
    #     server_name  localhost;

    #     #charset koi8-r;

    #     #access_log  logs/host.access.log  main;

    #     location / {
    #         root   html;
    #         index  index.html index.htm;
    #     }

    #     #error_page  404              /404.html;

    #     # redirect server error pages to the static page /50x.html
    #     #
    #     error_page   500 502 503 504  /50x.html;
    #     location = /50x.html {
    #         root   html;
    #     }

    #     # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #     #
    #     #location ~ \.php$ {
    #     #    proxy_pass   http://127.0.0.1;
    #     #}

    #     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #     #
    #     #location ~ \.php$ {
    #     #    root           html;
    #     #    fastcgi_pass   127.0.0.1:9000;
    #     #    fastcgi_index  index.php;
    #     #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #     #    include        fastcgi_params;
    #     #}

    #     # deny access to .htaccess files, if Apache's document root
    #     # concurs with nginx's one
    #     #
    #     #location ~ /\.ht {
    #     #    deny  all;
    #     #}
    # }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
